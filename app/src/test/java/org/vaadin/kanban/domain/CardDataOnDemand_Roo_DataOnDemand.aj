// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.vaadin.kanban.domain;

import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.vaadin.kanban.domain.Card;
import org.vaadin.kanban.domain.StateColumnDataOnDemand;

privileged aspect CardDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CardDataOnDemand: @Component;
    
    private Random CardDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Card> CardDataOnDemand.data;
    
    @Autowired
    private StateColumnDataOnDemand CardDataOnDemand.stateColumnDataOnDemand;
    
    public Card CardDataOnDemand.getNewTransientCard(int index) {
        org.vaadin.kanban.domain.Card obj = new org.vaadin.kanban.domain.Card();
        obj.setDescription("description_" + index);
        obj.setStateColumn(stateColumnDataOnDemand.getRandomStateColumn());
        java.lang.Integer sortOrder = new Integer(index);
        if (sortOrder < 0) {
            sortOrder = 0;
        }
        obj.setSortOrder(sortOrder);
        obj.setOwner("_" + index);
        obj.setStartDate(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setEndDate(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        return obj;
    }
    
    public Card CardDataOnDemand.getSpecificCard(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Card obj = data.get(index);
        return Card.findCard(obj.getId());
    }
    
    public Card CardDataOnDemand.getRandomCard() {
        init();
        Card obj = data.get(rnd.nextInt(data.size()));
        return Card.findCard(obj.getId());
    }
    
    public boolean CardDataOnDemand.modifyCard(Card obj) {
        return false;
    }
    
    public void CardDataOnDemand.init() {
        data = org.vaadin.kanban.domain.Card.findCardEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Card' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.vaadin.kanban.domain.Card>();
        for (int i = 0; i < 10; i++) {
            org.vaadin.kanban.domain.Card obj = getNewTransientCard(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
