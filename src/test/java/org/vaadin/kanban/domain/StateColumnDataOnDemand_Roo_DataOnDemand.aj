// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.vaadin.kanban.domain;

import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;
import org.vaadin.kanban.domain.StateColumn;

privileged aspect StateColumnDataOnDemand_Roo_DataOnDemand {
    
    declare @type: StateColumnDataOnDemand: @Component;
    
    private Random StateColumnDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<StateColumn> StateColumnDataOnDemand.data;
    
    public StateColumn StateColumnDataOnDemand.getNewTransientStateColumn(int index) {
        org.vaadin.kanban.domain.StateColumn obj = new org.vaadin.kanban.domain.StateColumn();
        obj.setName("name_" + index);
        java.lang.Integer workInProgressLimit = new Integer(index);
        if (workInProgressLimit < 0) {
            workInProgressLimit = 0;
        }
        obj.setWorkInProgressLimit(workInProgressLimit);
        obj.setDefinitionOfDone("definitionOfDone_" + index);
        java.lang.Integer sortOrder = new Integer(index);
        if (sortOrder < 0) {
            sortOrder = 0;
        }
        obj.setSortOrder(sortOrder);
        return obj;
    }
    
    public StateColumn StateColumnDataOnDemand.getSpecificStateColumn(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        StateColumn obj = data.get(index);
        return StateColumn.findStateColumn(obj.getId());
    }
    
    public StateColumn StateColumnDataOnDemand.getRandomStateColumn() {
        init();
        StateColumn obj = data.get(rnd.nextInt(data.size()));
        return StateColumn.findStateColumn(obj.getId());
    }
    
    public boolean StateColumnDataOnDemand.modifyStateColumn(StateColumn obj) {
        return false;
    }
    
    public void StateColumnDataOnDemand.init() {
        data = org.vaadin.kanban.domain.StateColumn.findStateColumnEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'StateColumn' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.vaadin.kanban.domain.StateColumn>();
        for (int i = 0; i < 10; i++) {
            org.vaadin.kanban.domain.StateColumn obj = getNewTransientStateColumn(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
